searchState.loadedDescShard("typify", 0, "Typify\nUse the specified type by path (this will result in a …\nAny version.\nSpecify the version for a named crate to consider for type …\nIf an unknown crate is encountered, generate a compiler …\nGenerate the type rather according to the schema.\nNever use the given crate.\nVariant with no associated data.\nStruct-type variant with named properties and types.\nTuple-type variant with at least one associated type.\nRepresentation of a type which may have a definition or …\nType details returned by Type::details() to inspect a type.\nEnum type details.\nEnum variant details.\nType identifier returned from type creation and used to …\nNewtype details.\nA collection of types.\nContains a set of modifications that may be applied to an …\nSettings that alter type generation.\nStruct type details.\nFull information pertaining to a struct property.\nPolicy to apply to external types described by schema …\nAn explicit version.\nAdd a collection of types that will be used as references. …\nAdd all the types contained within a RootSchema including …\nAdd a new type and return a type identifier that may be …\nAdd a new type with a name hint and return a the …\nWe need to root out any containment cycles, breaking them …\nProvides the the type identifier for the builder if one …\nA textual description of the type appropriate for debug …\nDescription.\nGet details about the type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a type given its ID.\nChecks if the type has the associated impl.\nThe identifier for the type as might be used for a …\nImport types from a schema file. This may be invoked with …\nGet the inner type of the newtype struct.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterate over all types including those defined in this …\nThe name of the type as a String.\nName.\nCreate a new TypeSpace with custom settings\nThe identifier for the type as might be used for a …\nThe identifier for the type as might be used for a …\nParse from a string\nGet name and type of each property.\nGet all information about each struct property.\nWhether the propertty is required.\nAll code for processed types.\nIdentifies the schema for the property.\nWhether the generated code needs <code>chrono</code> crate.\nWhether the generated code needs regress crate.\nWhether the generated code needs serde_json crate.\nWhether the generated code needs <code>uuid</code> crate.\nGet name and information of each enum variant.\nGet all information for each enum variant.\nReplace a given schema with a named type. The given schema …\nType schemas may contain an extension (<code>x-rust-type</code>) that …\nAdd an additional derive macro to apply to all defined …\nSpecify an additional derive to apply to the patched type.\nSpecify the map-like type to be used in generated code.\nModify a type with the given name. Note that specifying a …\nSpecify the new name for patched type.\nReplace a referenced type with a named type. This causes …\nFor structs, include a “builder” type that can be used …\nSet the name of the path prefix for types defined in this …\nType schemas may contain an extension (<code>x-rust-type</code>) that …")