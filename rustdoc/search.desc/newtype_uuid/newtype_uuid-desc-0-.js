searchState.loadedDescShard("newtype_uuid", 0, "A newtype wrapper around <code>Uuid</code>.\nA trait abstracting over typed and untyped UUIDs.\nAn error that occurred while parsing a <code>TypedUuid</code>.\nAn error that occurred while creating a <code>TypedUuidTag</code>.\nA timestamp that can be encoded into a UUID.\nA UUID with type-level information about what it’s used …\nRepresents marker types that can be used as a type …\nDescribes what kind of <code>TypedUuid</code> something is.\nReturns a string that corresponds to a type alias for …\nReturns the tag as a string.\nReturns the inner <code>Uuid</code>.\nThe underlying error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a UUID using the supplied bytes.\nCreates a UUID using the supplied bytes in little-endian …\nCreates a UUID from four field values.\nCreates a UUID from four field values in little-endian …\nConstruct a <code>Timestamp</code> from the number of 100 nanosecond …\nCreates a UUID from a 128bit value.\nCreates a UUID from a 128bit value in little-endian order.\nCreates a UUID from two 64bit values.\nConstruct a <code>Timestamp</code> from a Unix timestamp and up to a …\nConstruct a <code>Timestamp</code> from a Unix timestamp and up to a …\nCreates a new instance of <code>Self</code> from an untyped <code>Uuid</code>.\nReturns the version of the UUID.\nReturns the version number of the UUID.\nThe input string.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts <code>self</code> into an untyped <code>Uuid</code>.\nThe ‘max UUID’ (all ones).\nThe error message.\nCreates a new <code>TypedUuidTag</code> from a static string.\nCreates a new, random UUID v4 of this type.\nCreates a new, random UUID v7 of this type.\nThe ‘nil UUID’ (all zeros).\nGet a timestamp representing the current system time and …\nReturns the corresponding tag for this kind.\nThe tag of the UUID that failed to parse.\nGet the value of the timestamp as the number of 100 …\nGet the value of the timestamp as a Unix timestamp, as …\nPerform the conversion.\nAttempts to create a new <code>TypedUuidTag</code> from a static string.\nConverts the UUID to one with looser semantics.")